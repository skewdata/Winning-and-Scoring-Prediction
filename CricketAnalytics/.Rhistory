install.packages(dplyr)
install.packages(dplyr)
install.packages(stringr)
shiny::runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
shiny::runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
getwd()
setwd('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp()
runApp()
runApp()
runApp()
runApp()
CricketData <- read.csv('CricketModel_FINAL_NOPLAYER_LOG.csv', header = TRUE)
CricketData$result_V <- as.factor(CricketData$result_V)
test <- read.csv('empty.csv',header = TRUE)
str(CricketData)
Predict_df <- data.frame(WindSpeed = numeric(), Temperature = numeric(), Humidity = numeric(), WindDirectionDegree = numeric(), score.1 = numeric(), wickets = numeric(), TeamName_V = numeric(), Opposition_V = numeric(), ground_V = numeric(), result_V = factor(), toss_result_V = numeric(), strategy_V = numeric(), home_ground_V = numeric())
str(Predict_df)
str(CricketData)
CricketModel <- glm(result_V ~ .,data = CricketData, family = binomial)
get_MatchPrediction <- function(predictInput){
print(predictInput)
prediction <- predict(CricketModel,predictInput, type = 'response')
paste('Probabilty of winning is ',prediction, sep = '')
}
#Predict_df <- rbind(Predict_df,c(WindSpeed = input$WindSpeed,Temperature = input$temperature,Humidity = input$humidity,WindDirectionDegree = input$windDirection,score.1 = input$score,wickets = input$wickets,TeamName_V = input$teamA,Opposition_V = input$teamB,ground_V = 3,result_V = 1,toss_result_V = input$tossResult,strategy_V = input$strategy,home_ground_V = input$homeGround))
Predict_df[nrow(Predict_df)+1,] <- c(1,1,1,1,1,1,1,1,1,1,1,1,1)
get_MatchPrediction(Predict_df)
print(Predict_df)
runApp()
setwd('D:/DataScienceWorkspace/R-Workspace/logisticRegression')
Data <- read.csv('NEWDATA.csv',header = TRUE)
Data <- read.csv('NEWDATA.csv',header = TRUE)
split <- sample.split(Data$result_V,SplitRatio = 0.75)
DataTrain <- subset(Data, split == TRUE)
DataTest  <- subset(Data, split == FALSE)
class(DataTrain$result_V)
DataTrain$result_V <- as.factor(DataTrain$result_V)
DataTest$result_V <- as.factor(DataTest$result_V)
model <- glm(result_V ~ .,data = DataTrain, family = binomial)
summary(model)
table(DataTrain$result_V,predict > 0.5)
predict <- predict(model,type = 'response')
table(DataTrain$result_V,predict > 0.5)
ROCRPred <- prediction(predict, DataTrain$result_V)
predictTestData <- read.csv('Predict.csv', header = TRUE)
predictTestData$result_V <- as.factor(predictTestData$result_V)
predict(model,predictTestData,type = 'response')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
get_player_id <- function(player_name){
query_name <- gsub(" ","+",player_name)
query_url <- gsub("<<key>>",query_name,search_url)
#player_id_link <- read_html(query_url) %>% html_node('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id_link <- read_html(query_url) %>% html_nodes('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id <- regmatches(player_id_link,regexec("player/(.*?).html",player_id_link))[[2]][2]
}
get_active_team_players <- function(team_id){
base_url <- 'http://www.espncricinfo.com/ci/content/player/index.html?country=<<team_id>>'
base_url <- gsub("<<team_id>>",team_id,base_url)
players_list = read_html(base_url)%>%html_nodes('div#rectPlyr_Playerlistodi table.playersTable tr td a')%>%html_text()
print(unique(players_list))
}
get_active_team_players(6)
players <- get_active_team_players(6)
get_player_id("MS Dhoni")
stats_base_url <- 'http://stats.espncricinfo.com'
search_url <- paste(stats_base_url,'/ci/engine/stats/analysis.html?search=<<key>>;template=analysis',sep = "")
player_url <- 'http://www.espncricinfo.com/india/content/player/'
get_player_id("MS Dhoni")
get_player_id("MS Dhoni")
get_player_id("MS Dhoni")
get_player_id <- function(player_name){
query_name <- gsub(" ","+",player_name)
query_url <- gsub("<<key>>",query_name,search_url)
#player_id_link <- read_html(query_url) %>% html_node('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id_link <- read_html(query_url) %>% html_nodes('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id <- regmatches(player_id_link,regexec("player/(.*?).html",player_id_link))[[2]][2]
print(player_id)
}
get_player_id("MS Dhoni")
classify_players(players)
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[2,7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[2,4])
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
classify_players(players)
twoPlayers <- c("YS Chahal","DL Chahar")
classify_players(twoPlayers)
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[2,7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[2,4])
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
classify_players(twoPlayers)
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[2,7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[2,4])
print(playerBattingAvg)
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
classify_players(twoPlayers)
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
runApp('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
stats_base_url <- 'http://stats.espncricinfo.com'
search_url <- paste(stats_base_url,'/ci/engine/stats/analysis.html?search=<<key>>;template=analysis',sep = "")
player_url <- 'http://www.espncricinfo.com/india/content/player/'
get_player_id <- function(player_name){
query_name <- gsub(" ","+",player_name)
query_url <- gsub("<<key>>",query_name,search_url)
#player_id_link <- read_html(query_url) %>% html_node('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id_link <- read_html(query_url) %>% html_nodes('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id <- regmatches(player_id_link,regexec("player/(.*?).html",player_id_link))[[2]][2]
print(player_id)
}
get_player_id("MS Dhoni")
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
PlayerName <- "MS Dhoni"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
View(playerBattingTable)
which(playerBattingTable$Var.1 == "ODIs")
PlayerName <- "YS Chahal"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
print(playerBattingAvg)
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
twoPlayers <- c("YS Chahal","DL Chahar")
classify_players(twoPlayers)
twoPlayers <- c("YS Chahal","DL Chahar","MS Dhoni")
classify_players(twoPlayers)
setwd('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
CricketData <- read.csv('CricketModel_FINAL_LOG.csv', header = TRUE)
View(CricketData)
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
print(playerBattingAvg)
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
PlayerName <- "AJ Finch"
PlayerID <- get_player_id(PlayerName)
get_player_id <- function(player_name){
query_name <- gsub(" ","+",player_name)
query_url <- gsub("<<key>>",query_name,search_url)
#player_id_link <- read_html(query_url) %>% html_node('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id_link <- read_html(query_url) %>% html_nodes('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id <- regmatches(player_id_link,regexec("player/(.*?).html",player_id_link))[[2]][2]
print(player_id)
}
PlayerName <- "AJ Finch"
PlayerID <- get_player_id(PlayerName)
stats_base_url <- 'http://stats.espncricinfo.com'
search_url <- paste(stats_base_url,'/ci/engine/stats/analysis.html?search=<<key>>;template=analysis',sep = "")
player_url <- 'http://www.espncricinfo.com/india/content/player/'
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
PlayerName <- "PSP Handscomb"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
View(playerBowlingTable)
bowls
if(is.na(bowls) )
{
print("LANK")
}
runApp()
#getwd()
setwd('D:/DataScienceWorkspace/R-Workspace/CricketAnalytics')
groundMap <- read.csv('ground_Mapping.csv',header = TRUE)
View(groundMap)
runApp()
runApp()
classify_players <- function(player_vector){
allrounders <- 0
batsmen <- 0
bowlers <- 0
for(player in player_vector)
{
print(player)
playerName <- player
playerId <-get_player_id(player)
print(playerId)
print(paste(player_url,playerId,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
playerBattingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,playerId,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
playerBowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
print(playerBattingAvg)
if(playerBattingAvg > 30)
{
batsmen <- batsmen + 1
}
else if(playerBowls > 1200)
{
bowlers <- bowlers + 1
}
else if(playerBattingAvg > 20 && playerBowls > 800)
{
allrounders <- allrounders + 1
}
else
{
bowlers <- bowlers + 1
}
}
print(allrounders)
print(batsmen)
print(bowlers)
}
stats_base_url <- 'http://stats.espncricinfo.com'
search_url <- paste(stats_base_url,'/ci/engine/stats/analysis.html?search=<<key>>;template=analysis',sep = "")
player_url <- 'http://www.espncricinfo.com/india/content/player/'
PlayerName <- "PJ Cummins"
PlayerID <- get_player_id(PlayerName)
get_player_id <- function(player_name){
query_name <- gsub(" ","+",player_name)
query_url <- gsub("<<key>>",query_name,search_url)
#player_id_link <- read_html(query_url) %>% html_node('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id_link <- read_html(query_url) %>% html_nodes('#gurusearch_player a.statsLinks') %>% html_attr('href')
player_id <- regmatches(player_id_link,regexec("player/(.*?).html",player_id_link))[[2]][2]
print(player_id)
}
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
View(playerBattingTable)
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
PlayerName <- "JP Faulkner"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
PlayerName <- "AJ Finch"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
PlayerName <- "PSP Handscomb"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
if(is.na(bowls) )
{
print("LANK")
}
PlayerName <- "TM Head"
PlayerID <- get_player_id(PlayerName)
PlayerPage <- read_html(paste(player_url,PlayerID,'.html',sep = ''))
playerBattingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[1]') %>% html_table())
which(playerBattingTable$Var.1 == "ODIs")
battingAvg <- as.numeric(playerBattingTable[which(playerBattingTable$Var.1 == "ODIs"),7])
playerBowlingTable <- as.data.frame(read_html(paste(player_url,PlayerID,'.html',sep = '')) %>% html_nodes(xpath = '//*[@id="ciHomeContentlhs"]/div[4]/table[2]') %>% html_table())
bowls <- as.numeric(playerBowlingTable[which(playerBattingTable$Var.1 == "ODIs"),4])
runApp()
as.numeric(groundMap[which("Old Trafford Cricket Ground (Old Trafford)"),2])
str(groundMap)
View(groundMap)
groundValue <- groundMap[which("Old Trafford Cricket Ground (Old Trafford)"),2]
View(groundMap)
groundValue <- groundMap[which("Eden Gardens"),2]
groundMap$ground <- as.character(groundMap$ground)
View(groundMap)
groundValue <- groundMap[which("Eden Gardens"),2]
groundValue <- groundMap[which(groundMap$ground == "Eden Gardens"),2]
groundMap <- read.csv('ground_Mapping.csv',header = TRUE)
groundValue <- as.numeric(groundMap[which(groundMap$ground == "Eden Gardens"),2])
View(groundMap)
runApp()
runApp()
getwd()
Data <- read.csv('CricketModel_FINAL_LOG.csv',header = TRUE)
nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 51)])
nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 51),])
TeamAWins <- nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 51,Data$result_V == 1),])
TeamAWins <- nrow(as.numeric(Data[which(Data$TeamName_V == 4,Data$ground_V == 51,Data$result_V == 1),]))
TeamALoses <- <- nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 51,Data$result_V == 0),])
TeamALoses <- nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 51,Data$result_V == 0),])
TeamBWins <- nrow(Data[which(Data$TeamName_V == 6,Data$ground_V == 51,Data$result_V == 1),])
TeamBLoses <- nrow(Data[which(Data$TeamName_V == 6,Data$ground_V == 51,Data$result_V == 0),])
str(Data)
TeamAWins <- nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 11,Data$result_V == 1),])
TeamALoses <- nrow(Data[which(Data$TeamName_V == 4,Data$ground_V == 11,Data$result_V == 0),])
TeamAWins <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1))
subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1)
TeamBWins <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 2))
TeamALoses <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 0))
install.packages('ggplot2')
library(ggplot2)
ggplot(Data, aes(x=nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1)))) + geom_histogram()
nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1))
hist(TeamAWins)
ggplot(Data, aes(x=nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1)))) + geom_bar()
options(scipen=999)
ggplot(Data, aes(x=nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19 & Data$result_V == 1)))) + geom_bar()
ggplot(Data, aes(x=Data$result_V)) + geom_bar()
ggplot(Data, aes(x=Data$result_V)) + geom_bar(aes(fill = Data$TeamName_V))
ggplot(Data, aes(x=Data$result_V)) + geom_bar(aes(fill = Data$TeamName_V))
str(Data)
Data$TeamName_V <- as.factor(Data$TeamName_V)
ggplot(Data, aes(x=Data$result_V)) + geom_bar(aes(fill = Data$TeamName_V))
?hist()
TeamAMatches <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19))
TeamAMatches <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19))
Data <- read.csv('CricketModel_FINAL_LOG.csv',header = TRUE)
TeamAMatches <- nrow(subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19))
TeamAMatches <- subset(Data,Data$TeamName_V == 4 & Data$ground_V == 19)
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar()
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar(fill = TeamAMatches$result_V)
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar(aes(fill = TeamAMatches$result_V))
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar(aes(fill = TeamAMatches$result_V)) +xlab("Win = 1 Loss = 0") + ylab("Number of Matches")
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar(aes(fill = TeamAMatches$result_V)) +xlab("Win = 1 Loss = 0") + ylab("Number of Matches") + main("ground")
ggplot(TeamAMatches, aes(x=TeamAMatches$result_V)) + geom_bar(aes(fill = TeamAMatches$result_V))+ labs(title = "Ground", x = "Win = 1 Loss = 0", y = "Number of Matches")
runApp()
runApp()
